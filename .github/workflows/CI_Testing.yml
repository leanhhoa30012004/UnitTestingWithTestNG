name: Login Function Testing with TestNG (CI/CD) | Â© 2025 - Hoale

on:
  push:
    branches: [ "main" ]       # Trigger on push to main branch
  pull_request:
    branches: [ "main" ]       # Trigger on pull request to main branch

jobs:
  build:
    runs-on: ubuntu-latest     # Use Ubuntu runner for the build process

    steps:
      - uses: actions/checkout@v4   # Checkout repository code

      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml   # Compile and package the project

      - name: Distribute JAR/WAR file
        run: mkdir staging && cp target/*.jar staging   # Copy built JAR to staging folder

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: java-application-package
          path: staging

  test:
    needs: build                  # Run tests only after successful build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: maven

      - name: Run TestNG Tests
        run: mvn test -DsuiteXmlFile=testng.xml   # Run tests using TestNG suite

      - name: Publish Raw TestNG XML Report
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: testng-raw-reports
          path: target/surefire-reports

      - name: Generate HTML Test Report
        run: mvn surefire-report:report-only   # Generate HTML report from test results

      - name: Upload HTML Test Report
        uses: actions/upload-artifact@v4
        with:
          name: testng-html-report
          path: target/site/surefire-report.html

      # âœ… Extract test summary from surefire reports
      - name: Extract test summary
        id: test_summary
        run: |
          TOTAL=$(grep -oP 'Tests run: \d+' target/surefire-reports/*.txt | awk '{sum+=$3} END {print sum}')
          FAILED=$(grep -oP 'Failures: \d+' target/surefire-reports/*.txt | awk '{sum+=$2} END {print sum}')
          SKIPPED=$(grep -oP 'Skipped: \d+' target/surefire-reports/*.txt | awk '{sum+=$2} END {print sum}')
          PASSED=$((TOTAL - FAILED - SKIPPED))

          echo "TOTAL=$TOTAL" >> $GITHUB_OUTPUT
          echo "PASSED=$PASSED" >> $GITHUB_OUTPUT
          echo "FAILED=$FAILED" >> $GITHUB_OUTPUT
          echo "SKIPPED=$SKIPPED" >> $GITHUB_OUTPUT

      # âœ… Send email with test summary (styled HTML)
      - name: Send Email with Report
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "[CI Test Report] TestNG Results"
          to: ${{ secrets.EMAIL_RECEIVER }}
          from: Test Bot <${{ secrets.EMAIL_USERNAME }}>
          content_type: text/html
          body: |
            <!DOCTYPE html>
            <html>
            <head>
              <meta charset="UTF-8">
              <style>
                table {
                  border-collapse: collapse;
                }
                table, th, td {
                  border: 1px solid black;
                  padding: 6px;
                }
                th {
                  background-color: #f2f2f2;
                }
              </style>
            </head>
            <body>
              <h2>âœ… TestNG Report Summary</h2>
              <table>
                <tr><th>Total</th><th>Passed</th><th>Failed</th><th>Skipped</th></tr>
                <tr>
                  <td>${{ steps.test_summary.outputs.TOTAL }}</td>
                  <td style="color:green;">${{ steps.test_summary.outputs.PASSED }}</td>
                  <td style="color:red;">${{ steps.test_summary.outputs.FAILED }}</td>
                  <td style="color:orange;">${{ steps.test_summary.outputs.SKIPPED }}</td>
                </tr>
              </table>
              <p>ðŸ“Ž The full HTML report is attached to this email.</p>
            </body>
            </html>
          attachments: target/site/surefire-report.html

  deploy:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: java-application-package
          path: staging

      - name: Deploy to staging server
        run: |
          echo "Deploying application to staging server..."
          # Add your actual deployment commands here
