#name: Login Function Testing with TestNG (CI/CD) | ¬© 2025 - Hoale
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK 24
#        uses: actions/setup-java@v3
#        with:
#          java-version: '24'
#          distribution: 'temurin'
#          cache: maven
#
#      - name: Build with Maven
#        run: mvn -B clean package --file pom.xml
#
#      - name: Distribute JAR/WAR file
#        run: mkdir -p staging && cp target/*.jar staging
#
#      - name: Upload build artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: java-application-package
#          path: staging
#
#  test:
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK 24
#        uses: actions/setup-java@v3
#        with:
#          java-version: '24'
#          distribution: 'temurin'
#          cache: maven
#
#      - name: Run TestNG Tests
#        run: mvn test -DsuiteXmlFile=testng.xml
#
#      - name: Generate HTML Test Report
#        run: mvn surefire-report:report-only
#
#      - name: Upload HTML Test Report
#        uses: actions/upload-artifact@v4
#        with:
#          name: testng-html-report
#          path: target/site/surefire-report.html
#
#      - name: Extract test summary
#        id: test_summary
#        run: |
#          TOTAL=$(grep -oP 'Tests run: \d+' target/surefire-reports/*.txt | awk '{sum+=$3} END {print sum}')
#          FAILED=$(grep -oP 'Failures: \d+' target/surefire-reports/*.txt | awk '{sum+=$2} END {print sum}')
#          SKIPPED=$(grep -oP 'Skipped: \d+' target/surefire-reports/*.txt | awk '{sum+=$2} END {print sum}')
#          PASSED=$((TOTAL - FAILED - SKIPPED))
#
#          echo "TOTAL=$TOTAL" >> $GITHUB_ENV
#          echo "PASSED=$PASSED" >> $GITHUB_ENV
#          echo "FAILED=$FAILED" >> $GITHUB_ENV
#          echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV
#
#      - name: Get committer email
#        id: committer
#        run: |
#          EMAIL=$(git log -1 --pretty=format:'%ae')
#          echo "COMMIT_EMAIL=$EMAIL" >> $GITHUB_ENV
#
#      - name: Install wkhtmltopdf
#        run: sudo apt-get update && sudo apt-get install -y wkhtmltopdf
#
#      - name: Convert HTML report to PDF
#        run: |
#          mkdir -p pdf-report
#          wkhtmltopdf --enable-local-file-access target/site/surefire-report.html pdf-report/testng-report.pdf
#
#      - name: Send PDF Test Report to committer
#        uses: dawidd6/action-send-mail@v3
#        with:
#          server_address: smtp.gmail.com
#          server_port: 465
#          username: ${{ secrets.EMAIL_USERNAME }}
#          password: ${{ secrets.EMAIL_PASSWORD }}
#          subject: "[CI Test Report] TestNG PDF Results"
#          to: ${{ env.COMMIT_EMAIL }}
#          from: Test Bot <${{ secrets.EMAIL_USERNAME }}>
#          content_type: text/plain
#          body: |
#            ‚úÖ TestNG Report Summary
#
#            üìã Total Tests : ${{ env.TOTAL }}
#            ‚úÖ Passed      : ${{ env.PASSED }}
#            ‚ùå Failed      : ${{ env.FAILED }}
#            ‚ö†Ô∏è Skipped     : ${{ env.SKIPPED }}
#
#            üìé The full PDF report is attached.
#          attachments: pdf-report/testng-report.pdf
name: Login Function Testing with TestNG (CI/CD) | ¬© 2025 - Hoale

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven and JaCoCo
        run: mvn clean verify -DsuiteXmlFile=testng.xml

      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: java-application-package
          path: target/*.jar

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: maven

      - name: Run tests and generate coverage
        run: mvn test -DsuiteXmlFile=testng.xml

      - name: Generate surefire HTML report
        run: mvn surefire-report:report-only

      - name: Generate JaCoCo Coverage Report
        run: mvn jacoco:report

      - name: Download ReportGenerator
        run: |
          wget https://github.com/danielpalme/ReportGenerator/releases/download/v5.2.4/ReportGenerator_5.2.4.zip -O reportgen.zip
          unzip reportgen.zip -d reportgenerator

      - name: Generate HTML & chart coverage report
        run: |
          dotnet reportgenerator/ReportGenerator.dll \
            -reports:target/site/jacoco/jacoco.xml \
            -targetdir:coverage-report \
            -reporttypes:Html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage-report/index.htm

      - name: Extract test summary
        id: test_summary
        run: |
          TOTAL=$(grep -oP 'Tests run: \d+' target/surefire-reports/*.txt | awk '{sum+=$3} END {print sum}')
          FAILED=$(grep -oP 'Failures: \d+' target/surefire-reports/*.txt | awk '{sum+=$2} END {print sum}')
          SKIPPED=$(grep -oP 'Skipped: \d+' target/surefire-reports/*.txt | awk '{sum+=$2} END {print sum}')
          PASSED=$((TOTAL - FAILED - SKIPPED))

          echo "TOTAL=$TOTAL" >> $GITHUB_ENV
          echo "PASSED=$PASSED" >> $GITHUB_ENV
          echo "FAILED=$FAILED" >> $GITHUB_ENV
          echo "SKIPPED=$SKIPPED" >> $GITHUB_ENV

      - name: Get committer email
        id: committer
        run: |
          echo "COMMIT_EMAIL=$(git log -1 --pretty=format:'%ae')" >> $GITHUB_ENV

      - name: Install wkhtmltopdf
        run: sudo apt-get update && sudo apt-get install -y wkhtmltopdf

      - name: Combine HTML reports into one
        run: |
          mkdir -p merged-report
          echo "<h1>TestNG Results</h1>" > merged-report/combined.html
          cat target/site/surefire-report.html >> merged-report/combined.html
          echo "<h1>JaCoCo Coverage</h1>" >> merged-report/combined.html
          cat target/site/jacoco/index.html >> merged-report/combined.html

      - name: Convert coverage HTML report to PDF
        run: |
          wkhtmltopdf --enable-local-file-access coverage-report/index.html pdf-report/coverage-report.pdf

      - name: Send PDF report to committer
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "[CI Test Report] Unit Test + Coverage"
          to: ${{ env.COMMIT_EMAIL }}
          from: Test Bot <${{ secrets.EMAIL_USERNAME }}>
          content_type: text/plain
          body: |
            ‚úÖ TestNG Report Summary

            üìã Total Tests : ${{ env.TOTAL }}
            ‚úÖ Passed      : ${{ env.PASSED }}
            ‚ùå Failed      : ${{ env.FAILED }}
            ‚ö†Ô∏è Skipped     : ${{ env.SKIPPED }}

            üìé PDF report is attached.
          attachments: pdf-report/report.pdf
